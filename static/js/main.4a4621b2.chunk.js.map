{"version":3,"sources":["components/contactList/Contact.module.css","components/filter/Filter.module.css","components/container/Container.module.css","components/form/Form.module.css","redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/store.js","components/container/Container.js","redux/phonebook-operations.js","redux/phonebook-selectors.js","components/form/Form.js","components/contactList/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","changeFilter","deleteContactRequest","deleteContactSuccess","deleteContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","items","createReducer","state","payload","filter","contact","id","loading","initialState","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","phonebookReducer","devTools","process","Container","children","className","s","container","axios","defaults","baseURL","getFilter","getContacts","getVisibleContacts","normalizedFilter","toLowerCase","console","log","name","includes","Form","useSelector","dispatch","useDispatch","onSubmit","number","a","post","data","addContact","useState","setName","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","reset","preventDefault","find","alert","form","htmlFor","label","type","pattern","title","required","onChange","input","btn","ContactItem","onDeleteContact","onClick","button","ContactList","deleteContact","contactId","delete","then","catch","error","useEffect","get","list","map","Filter","actions","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a4621b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__2hYWF\",\"button\":\"Contact_button__utHzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__25XVS\",\"input\":\"Filter_input__1XUaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1YM7z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2Ll75\",\"label\":\"Form_label__2RsuO\",\"input\":\"Form_input__1Ny8m\",\"btn\":\"Form_btn__M5eV7\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\r\n////////////////////////////////////\r\n// const addContact = (name, number) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// const deleteContact = (conactId) => ({\r\n//   type: types.DELETE,\r\n//   payload: conactId,\r\n// });\r\n\r\n// const changeFilter = (value) => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  changeFilter,\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  fetchContactSuccess,\r\n  fetchContactRequest,\r\n  fetchContactError,\r\n} from \"./phonebook-actions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst initialState = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nexport default initialState;\r\n\r\n////////////before//////////////\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const initialState = combineReducers({\r\n//   items,\r\n//   filter,\r\n// });\r\n","// import { createStore, combineReducers } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport logger from \"redux-logger\";\r\nimport phonebookReducer from \"./phonebook-reducer\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n// import { getDefaultNormalizer } from \"@testing-library/dom\";\r\n\r\n///////// пример прослойки /////////////////\r\n// const myMiddleware = (store) => (next) => (action) => {\r\n//   console.log(\"wewe\", action);\r\n\r\n//   next(action);\r\n// };\r\n//////////////////////////////////////////////\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // myMiddleware,\r\n  logger,\r\n];\r\n\r\n// const persistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blackList: [\"filter\"],\r\n// };\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    // contacts: persistReducer(persistConfig, phonebookReducer),\r\n    contacts: phonebookReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\n","import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  fetchContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"https://6192729d57b14a0017c4a0b9.mockapi.io\";\r\n\r\n///////////////пример с асинхронной функцией/////////////////\r\n\r\nexport const addContact = (name, number) => async (dispatch) => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n\r\n  //   axios\r\n  //     .post(\"/contacts\", contact)\r\n  //     .then(({ data }) => dispatch(addContactSuccess(data)))\r\n  //     .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`./contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactError(error)));\r\n};\r\n// export default addContact;\r\n","export const getFilter = (state) => state.contacts.filter;\r\nexport const getContacts = (state) => state.contacts.items;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const filter = getFilter(state);\r\n  const contacts = getContacts(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter((contact) => {\r\n    console.log(contact.name.name);\r\n    console.log(contact.name);\r\n    return contact.name.name.toLowerCase().includes(normalizedFilter);\r\n    // return contact.name.toLowerCase().includes(normalizedFilter);\r\n  });\r\n};\r\n","// import React, { Component } from \"react\";\r\nimport { useState } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addContact } from \"../../redux/phonebook-operations\";\r\nimport { getContacts } from \"../../redux/phonebook-selectors\";\r\n// import PropTypes from \"prop-types\";\r\nimport s from \"./Form.module.css\";\r\n\r\nfunction Form() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (name, number) => dispatch(addContact(name, number));\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isContactsIncludes = contacts.find(\r\n      (contact) => contact.name.name === name\r\n      // (contact) => contact.name === name\r\n    );\r\n\r\n    if (isContactsIncludes) {\r\n      return alert(`${name} is alredy in contacts`);\r\n    } else {\r\n      onSubmit({ name, number });\r\n      reset();\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className={s.form}>\r\n        <label htmlFor={nameInputId} className={s.label}>\r\n          Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          className={s.input}\r\n        />\r\n\r\n        <label htmlFor={numberInputId} className={s.label}>\r\n          Number\r\n        </label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n          className={s.input}\r\n        />\r\n\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","// import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nconst ContactItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li>\r\n      <span>{name}: </span>\r\n      <span>{number}</span>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n        className={s.button}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\n// ContactItem.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   id: PropTypes.string.isRequired,\r\n//   number: PropTypes.string.isRequired,\r\n//   onDeleteContact: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default ContactItem;\r\n","// import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport s from \"./Contact.module.css\";\r\nimport { useEffect } from \"react\";\r\n// import * as actions from \"../../redux/phonebook-actions\";\r\nimport * as operations from \"../../redux/phonebook-operations\";\r\nimport { getVisibleContacts } from \"../../redux/phonebook-selectors\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const deleteContact = (id) => dispatch(operations.deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(operations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name }) => {\r\n        return (\r\n          <ContactItem\r\n            name={name.name}\r\n            number={name.number}\r\n            onDeleteContact={deleteContact}\r\n            key={id}\r\n            id={id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\n// class ContactList extends Component {\r\n//   render() {\r\n//     const contacts = this.props.contacts;\r\n//     const deleteContacts = this.props.onDeleteContact;\r\n//     console.log(contacts);\r\n//     return (\r\n//       <ul>\r\n//         {contacts.map(({ id, name, number }) => (\r\n//           <ContactItem\r\n//             name={name}\r\n//             number={number}\r\n//             onDeleteContact={deleteContacts}\r\n//             key={id}\r\n//             id={id}\r\n//           />\r\n//         ))}\r\n//       </ul>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//     })\r\n//   ),\r\n//   onDeleteContact: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default ContactList;\r\n","// import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport { getFilter } from \"../../redux/phonebook-selectors\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/phonebook-actions\";\r\n\r\nfunction Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = (e) => dispatch(actions.changeFilter(e.currentTarget.value));\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={s.input}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n// Filter.propTypes = {\r\n//   onChange: PropTypes.func.isRequired,\r\n//   value: PropTypes.string.isRequired,\r\n// };\r\n\r\nexport default Filter;\r\n","// import { useState, useEffect } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport Container from \"./container/Container\";\nimport Form from \"./form/Form\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\n\nfunction App() {\n  // // const [contacts, setContact] = useState(() => {\n  // //   return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? \"\";\n  // // });\n  // const [contacts, setContact] = useState([]);\n\n  // useEffect(() => {\n  //   const contacts = localStorage.getItem(\"contacts\");\n  //   const parsedContacts = JSON.parse(contacts);\n  //   if (parsedContacts) {\n  //     setContact(parsedContacts);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // const addContact = ({ name, number }) => {\n  //   const newContact = {\n  //     id: uuidv4(),\n  //     name,\n  //     number,\n  //   };\n\n  //   // this.setState(({ contacts }) => {\n  //   if (contacts.some((contact) => contact.name === name)) {\n  //     return alert(`${name} is already in contacts!`);\n  //   }\n\n  //   setContact((prevContacts) => [newContact, ...contacts]);\n  // };\n\n  // // this.setState(({ contacts }) => ({\n  // //   contacts: [newContact, ...contacts],\n  // // }));\n  // const [filter, setFilter] = useState(\"\");\n\n  // const watchFilter = (event) => {\n  //   setFilter(event.currentTarget.value);\n  // };\n\n  // const filterContacts = () => {\n  //   const normalizedFilter = filter.toLowerCase();\n\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(normalizedFilter)\n  //   );\n  // };\n\n  // const deleteContact = (id) => {\n  //   setContact((prevContacts) =>\n  //     prevContacts.filter((contact) => contact.id !== id)\n  //   );\n  // };\n\n  // const results = filterContacts();\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport App from \"./components/App\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <PersistGate loading={null} persistor={persistor}> */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    {/* </PersistGate> */}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}